package com.java1234.controller.wap;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;
import com.java1234.entity.Client;
import com.java1234.entity.weixin.WeiXinUser;
import com.java1234.service.ClientService;
import com.java1234.service.weixin.WeiXinUserService;
import com.java1234.util.ResponseUtil;
import com.java1234.util.StringUtil;
import net.sf.json.JSONObject;

@Controller
@RequestMapping("/wap/client")
public class WAP_Client_Controller {
	
	@Resource
	private ClientService  clientService;
	@Resource
	private WeiXinUserService  weiXinUserService;
	
	
	/**
	 * /wap/client/set
	 */
	@RequestMapping("/set")
	public ModelAndView set(HttpServletRequest request,HttpSession session) throws Exception {
		ModelAndView mav = new ModelAndView();
		String openid = (String) session.getAttribute("openid");
		Client client = clientService.finbByOpenid(openid);
		mav.addObject("client", client);
		mav.addObject("save_url", "/client/update?id="+client.getId());

		mav.setViewName("/wap/wo/set");
		return mav;
	}
	
	/**
	 * /wap/client/info
	 */
	@RequestMapping("/info")
	public String info(HttpServletResponse response,HttpServletRequest request,HttpSession session)throws Exception{
		String openid = (String) session.getAttribute("openid");
		JSONObject result = new JSONObject();
		if(StringUtil.isEmpty(openid)){
			result.put("success", false);
			ResponseUtil.write(response, result.toString());
			return null;
		}
		WeiXinUser weixinUser = weiXinUserService.findByOpenId(openid);
		Client client = clientService.finbByOpenid(openid);
		result.put("success", true);
		result.put("img", weixinUser.getHeadimgurl());
		result.put("name", client.getName());
		result.put("phone", client.getPhone());
		result.put("address", client.getAddress());
		ResponseUtil.write(response, result.toString());
		return null;
	}
	
	
	
}
