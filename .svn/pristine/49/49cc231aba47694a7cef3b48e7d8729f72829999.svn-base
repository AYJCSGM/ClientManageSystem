package com.java1234.controller.admin;


import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import com.google.gson.Gson;
import com.java1234.entity.Config;
import com.java1234.entity.Result;
import com.java1234.service.ConfigService;
import com.java1234.util.Base64Test;
import com.java1234.util.FileUtil;
import com.java1234.util.ResponseUtil;
import com.java1234.util.StringUtil;




@Controller
@RequestMapping("/admin/config")
public class AdminConfigController {
	
	@Resource
	private ConfigService configService;
	
	@RequestMapping("/update")
	public String update(Config config,@RequestParam(value = "imgData", required = false) String imgData ,HttpServletResponse response,HttpServletRequest request)throws Exception{
		
		if(StringUtil.isNotEmpty(imgData)){
			this.updateImgDataBase64(imgData, config, request);
		}
		
		
		int resultTotal=configService.update(config);
		Result result = new Result();
		Gson gson = new Gson();
		if(resultTotal>0){
			result.setSuccess(true);
			result.setMsg("修改成功");
		}else{
			result.setSuccess(false);
			result.setMsg("修改失败!!!!!!!");
		}
		ResponseUtil.write(response, gson.toJson(result));
		return null;
	}
	
	
	@RequestMapping("/findById")
	public String findById(
			@RequestParam(value="id",required=false)String id,
			HttpServletResponse response,HttpServletRequest request)throws Exception{
		Gson gson = new Gson();
		Config config = configService.findById(Integer.parseInt(id));
		ResponseUtil.write(response, gson.toJson(config));
		return null;
	}
	
	
	public  void   updateImgDataBase64(String imgData,Config config,HttpServletRequest request ){
		//取得根目录带d://dxxxxx/tomcat/ruzhou/
		String webPath=request.getServletContext().getRealPath("/");
		//定义根目录下面的文件夹
		String  updateFile = "static/images/base/";
		String fileName = "share_index_log.jpg";
		//调用产生文件夹的方法
		FileUtil.makeDirs(webPath+updateFile);
		imgData = imgData.replace("data:image/png;base64,", "");
		Base64Test.GenerateImage(imgData, webPath+updateFile+fileName);
		config.setWx_share_img("/"+updateFile+fileName);
	}
	
	
	
}
